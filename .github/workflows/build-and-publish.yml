name: build-and-publish

on:
  push:
    branches:
      - release/*
    paths:
      # relevant
      - .github/**
      - element-templates/**
      - src/**
      - pom.xml
      # irrelevant
      - "!.idea/**"
      - "!examples/**"
      - "!*.java-version"
      - "!*.example"
      - "!*.md"

jobs:
  unit-test:
    uses: ./.github/workflows/reusable-unit-test.yml
    with:
      java-version: '21'
      distribution: 'temurin'
      maven-options: '-PcheckFormat'
    secrets: inherit

  determine-connector-version:
    needs: unit-test
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.scope_version.outputs.VERSION }}

    steps:
      - uses: actions/checkout@v4

      - name: set up jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: extract release version
        id: extract_version
        # this extracts <version> from pom.xml into env.VERSION
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: scope the version into an output
        id: scope_version
        run: echo "VERSION=${{ env.VERSION }}" >> "$GITHUB_OUTPUT"

  build:
    needs: determine-connector-version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up jdk 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build project
        run: mvn clean package

  create-release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: create github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: upload war file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/rfc-*.war
          asset_name: rfc-connector.war
          asset_content_type: application/zip

      - name: upload element templates
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: element-templates/sap-rfc-connector.json
          asset_name: sap-rfc-connector.json
          asset_content_type: application/json