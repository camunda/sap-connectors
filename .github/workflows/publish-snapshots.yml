name: Deploy snapshots
on:
  push:
    branches:
      - main
  workflow_dispatch: { }

defaults:
  run:
    # use bash shell by default to ensure pipefail behavior is the default
    # see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#exit-codes-and-error-action-preference
    shell: bash

jobs:
  deploy-snapshots:
    name: Deploy snapshot artifacts
    runs-on: ubuntu-latest
    concurrency: deploy-snapshots
    steps:
      - uses: actions/checkout@v5

      - name: Import Secrets
        id: secrets # important to refer to it in later steps
        uses: hashicorp/vault-action@v3.4.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false # we rely on step outputs, no need for environment variables
          secrets: |
            secret/data/products/connectors/ci/common DOCKERHUB_USER;
            secret/data/products/connectors/ci/common DOCKERHUB_PASSWORD;
            secret/data/products/connectors/ci/common ARTIFACTORY_USR;
            secret/data/products/connectors/ci/common ARTIFACTORY_PSW;

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup Java Build
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          server-id: camunda-nexus
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # Use CI Nexus as co-located pull-through cache for Maven artifacts via ~/.m2/settings.xml
      - name: 'Create settings.xml'
        uses: s4u/maven-settings-action@v4.0.0
        with:
          githubServer: false
          servers: |
            [{
               "id": "camunda-nexus",
               "username": "${{ steps.secrets.outputs.ARTIFACTORY_USR }}",
               "password": "${{ steps.secrets.outputs.ARTIFACTORY_PSW }}"
             }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*,!confluent,!shibboleth", "name": "camunda Nexus"}]'

      - name: Build Artifacts
        run: mvn -B compile generate-sources source:jar javadoc:jar deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ steps.secrets.outputs.ARTIFACTORY_USR }}
          MAVEN_PASSWORD: ${{ steps.secrets.outputs.ARTIFACTORY_PSW }}

      - name: Lint Connector Bundle Dockerfile - odata-connector
        uses: hadolint/hadolint-action@v3.2.0
        with:
          dockerfile: odata-connector/Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,arm'

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ steps.secrets.outputs.DOCKERHUB_USER }}
          password: ${{ steps.secrets.outputs.DOCKERHUB_PASSWORD }}

      # Extract the Camunda version from the Maven property 'version.camunda' and expose it as an env var
      - name: Determine Camunda Connectors Version
        id: camunda_version
        run: |
          set -euo pipefail
          VERSION=$(mvn -q -DforceStdout help:evaluate -Dexpression=version.camunda)
          if [[ -z "$VERSION" ]]; then
            echo "Failed to resolve version.camunda" >&2
            exit 1
          fi
          echo "Resolved version.camunda=$VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build and Push Docker Image tag SNAPSHOT - OData Connector
        uses: docker/build-push-action@v6
        with:
          context: odata-connector
          push: true
          tags: camunda/odata-connector:SNAPSHOT
          platforms: linux/amd64,linux/arm64
          provenance: false
          build-args: |
            CAMUNDA_CONNECTORS_VERSION=${{ steps.camunda_version.outputs.version }}
